name: Build ifswp2cm

on:
  # workflow_dispatch:
  push:
    # branches: [ "main" ]
    tags: ["v*"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Setup cmake
      uses: jwlawson/actions-setup-cmake@v2

    - name: Check cmake version
      run: cmake --version

    - name: Setup build tools
      run: |
        sudo apt -y update
        sudo apt -y install pkg-config ninja-build mingw-w64
        sudo update-alternatives --set x86_64-w64-mingw32-g++ /usr/bin/x86_64-w64-mingw32-g++-posix
        sudo update-alternatives --set x86_64-w64-mingw32-gcc /usr/bin/x86_64-w64-mingw32-gcc-posix
        sudo update-alternatives --set i686-w64-mingw32-g++ /usr/bin/i686-w64-mingw32-g++-posix
        sudo update-alternatives --set i686-w64-mingw32-gcc /usr/bin/i686-w64-mingw32-gcc-posix

    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: true
        fetch-depth: 1

    - name: Build ifswp2cm
      run:  |
        cmake -G Ninja -B build_32_release -DCMAKE_INSTALL_PREFIX=out_32_release -DCMAKE_BUILD_TYPE=Release -DCMAKE_SYSTEM_NAME=Windows -DCMAKE_C_COMPILER=i686-w64-mingw32-gcc -DCMAKE_CXX_COMPILER=i686-w64-mingw32-g++
        cmake --build build_32_release --config Release --target install
        cmake -G Ninja -B build_64_release -DCMAKE_INSTALL_PREFIX=out_64_release -DCMAKE_BUILD_TYPE=Release -DCMAKE_SYSTEM_NAME=Windows -DCMAKE_C_COMPILER=x86_64-w64-mingw32-gcc -DCMAKE_CXX_COMPILER=x86_64-w64-mingw32-g++
        cmake --build build_64_release --config Release --target install
 
    - name: Archive
      run: |
        cp ./ext/libwebp2/LICENSE ./LICENSE_libwebp2
        mv ./LICENSE LICENSE_ifswp2cm
        zip ifswp2cm -j ./build_32_release/ifswp2cm.spi ./build_64_release/ifswp2cm.sph ./LICENSE*

    - name: Release
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        name: Release ${{ github.ref_name }}
        body: |
          ## Release notes
        files: ifswp2cm.zip
